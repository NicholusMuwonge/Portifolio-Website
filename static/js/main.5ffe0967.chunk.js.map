{"version":3,"sources":["App/black.png","App/nicks.png","serviceWorker.js","Navbar/navbar.js","App/App.js","Router/Route.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Navbar","Fragment","className","id","href","App","style","color","class","fontWeight","marginLeft","src","bl","alt","background","border","marginTop","Routing","React","Component","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5ffe0967.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/black.e4478fb4.png\";","module.exports = __webpack_public_path__ + \"static/media/nicks.0be4f42b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport \"./navbar.scss\";\r\n\r\n\r\nfunction Navbar(){\r\n    // render(){\r\n        return(\r\n            <React.Fragment>\r\n                <nav className=\"horizontal navbar navbar-expand-lg\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-a\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-a\" href=\"#\">About</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-a\" href=\"#\">Portifolio</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-a\" href=\"#\">Blog</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-a\" href=\"#\">Contact</a>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n// }\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport logo from './nicks.png';\r\nimport bl from './black.png';\r\nimport './App.scss';\r\nimport Nav from \"../Navbar/navbar\"\r\n\r\nfunction App() {\r\n  return (\r\n      <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <header className=\"App-headers container-fluid\">\r\n          <div className=\"row\">\r\n          <div className=\"welcome col-sm-8 col-xs-8\">nicks<span style={{color:\"red\"}}>.</span>\r\n          </div>\r\n          <div className=\"navcontainer col-md-4 col-xs-4\"><Nav /></div>\r\n          \r\n          </div>\r\n        </header>\r\n        <br/><br/><br/><br/>\r\n        <div className=\"intro row\">\r\n          <div className=\"col-bg-8 col-xs-8\">\r\n            <span id=\"meet\">\r\n              meet </span>\r\n              <span className=\"dot\">...</span><br/>\r\n              <span className=\"name\">Nicholus</span><br/>\r\n              <span className=\"name\">Muwonge<span class=\"dot\">.</span></span>\r\n              <br/><br/>\r\n              <span className=\"slogan\"> \" One Of The Best Software Engineers & <br/> \r\n              <span id=\"nl\">Code Bugs Bounty Hunter .\"<br/>\r\n                <span style={{fontWeight:\"bolder\", marginLeft:\"2px\"}}>- Mama Says</span>\r\n              </span></span>\r\n          </div>\r\n          <div className=\"new col-md-6\">\r\n            <img src={bl} alt=\"\" className=\"img\"/>\r\n          </div>\r\n          <div>\r\n          <div className=\"col-md-12\">\r\n            <button className=\"btn btn-lg tour\" style={{\r\n              background: \"none\", color:\"yellow\", border:\"yellow 1px solid\", marginTop:\"2em\"}}\r\n              >Take A Tour</button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"../App/App\";\r\n// import Navbar from \"../Navbar/navbar\"\r\n\r\nclass Routing extends React.Component {\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n            {/* <Navbar/> */}\r\n            <Router>\r\n                <App/>\r\n            </Router>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nexport default Routing;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport Routing from './Router/Route';\n\nReactDOM.render(<Routing />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}